import Router, {listen, navigate} from "../../router.js";

class {
    onCreate() {
        this.state = {
            currentRoute: null,
            params: {}
        };
    }

    onMount() {
        if(this.input == null || this.input.routes == null) {
            console.warn('simple-marko-router: No routes are defined.');
            return;
        }

        Router.initialize(this.input.routes.map(el=>el.path), this.input.baseRoute||null);

        listen('navigate', this.navigate.bind(this));
        navigate(window.location.pathname);
    }

    navigate(i, route, path, params) {
        // Show default route if defined when no matching route is found.
        if(i === -1 && this.input.defaultRoute) {
            navigate(this.input.defaultRoute);
        }
        else if(i > -1) {
            this.state.params = params;
            this.state.currentRoute = this.input.routes[i];
        }
    }
}

if(state.currentRoute && state.currentRoute.component)
    <${state.currentRoute?state.currentRoute.component:null} params=state.params/>
else-if(state.currentRoute)
    <${state.currentRoute?state.currentRoute.renderBody:null} params=state.params/>